"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var operators=require("rxjs/operators"),rxjs=require("rxjs"),tsAction=require("ts-action");
/*! *****************************************************************************
Copyright (c) Microsoft Corporation. All rights reserved.
Licensed under the Apache License, Version 2.0 (the "License"); you may not use
this file except in compliance with the License. You may obtain a copy of the
License at http://www.apache.org/licenses/LICENSE-2.0

THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
MERCHANTABLITY OR NON-INFRINGEMENT.

See the Apache Version 2.0 License for specific language governing permissions
and limitations under the License.
***************************************************************************** */
function __read(r,e){var t="function"==typeof Symbol&&r[Symbol.iterator];if(!t)return r;var n,o,a=t.call(r),i=[];try{for(;(void 0===e||e-- >0)&&!(n=a.next()).done;)i.push(n.value)}catch(r){o={error:r}}finally{try{n&&!n.done&&(t=a.return)&&t.call(a)}finally{if(o)throw o.error}}return i}function __spread(){for(var r=[],e=0;e<arguments.length;e++)r=r.concat(__read(arguments[e]));return r}function isEqualCheck(r,e){return r===e}function isArgumentsChanged(r,e,t){for(var n=0;n<r.length;n++)if(!t(r[n],e[n]))return!0;return!1}function defaultMemoize(r,e,t){void 0===e&&(e=isEqualCheck),void 0===t&&(t=isEqualCheck);var n=null,o=null;
// tslint:disable-next-line:no-any anything could be the result.
return{memoized:
// tslint:disable-next-line:no-any anything could be the result.
function(){if(!n)return o=r.apply(null,arguments),n=arguments,o;if(!isArgumentsChanged(arguments,n,e))return o;n=arguments;var a=r.apply(null,arguments);return t(o,a)?o:(o=a,a)},reset:function(){n=null,o=null}}}function createSelector(){for(var r=[],e=0;e<arguments.length;e++)r[e]=arguments[e];return createSelectorFactory(defaultMemoize).apply(void 0,__spread(r))}function defaultStateFn(r,e,t,n){if(void 0===t){var o=e.map(function(e){return e(r)});return n.memoized.apply(null,o)}var a=e.map(function(e){return e(r,t)});return n.memoized.apply(null,__spread(a,[t]))}function createSelectorFactory(r,e){return void 0===e&&(e={stateFn:defaultStateFn}),function(){for(var t=[],n=0;n<arguments.length;n++)t[n]=arguments[n];var o=t;if(Array.isArray(o[0])){var a=__read(o),i=a[0],u=a.slice(1);o=__spread(i,u)}var c=o.slice(0,o.length-1),p=o[o.length-1],s=c.filter(function(r){return r.release&&"function"==typeof r.release}),f=r(function(){for(var r=[],e=0;e<arguments.length;e++)r[e]=arguments[e];return p.apply(null,r)}),l=defaultMemoize(function(r,t){
// createSelector works directly on state
// e.g. createSelector((state, props) => ...)
return 0===c.length&&void 0!==t?p.apply(null,[r,t]):e.stateFn.apply(null,[r,c,t,f])});function d(){l.reset(),f.reset(),s.forEach(function(r){return r.release()})}return Object.assign(l.memoized,{release:d,projector:f.memoized})}}function select(r,e){for(var t=[],n=2;n<arguments.length;n++)t[n-2]=arguments[n];return function(n){var o;if("string"==typeof r){var a=__spread([e],t).filter(Boolean);o=n.pipe(operators.pluck.apply(void 0,__spread([r],a)))}else{if("function"!=typeof r)throw new TypeError("Unexpected type '"+typeof r+"' in select operator, expected 'string' or 'function'");o=n.pipe(operators.map(function(t){return r(t,e)}))}return o.pipe(operators.distinctUntilChanged())}}!function(r){r.switchMap="switchMap",r.mergeMap="mergeMap",r.concatMap="concatMap",r.exhaustMap="exhaustMap"}(exports.FlattenOperator||(exports.FlattenOperator={}));var isObject=function(r){return null!==r&&"object"==typeof r},_pipe=function(r){return r.reduce(function(r,e){return function(){for(var t=[],n=0;n<arguments.length;n++)t[n]=arguments[n];return r(e.apply(void 0,__spread(t)))}})},catchErr=rxjs.pipe(operators.catchError(function(r){return rxjs.of(r)})),flatCatch=function(r){return r.pipe(catchErr)},mapToObservable=function(r){return rxjs.isObservable(r)?r:r instanceof Promise?rxjs.from(r):rxjs.of(r)};function ofType(){for(var r=[],e=0;e<arguments.length;e++)r[e]=arguments[e];return operators.filter(function(e){return r.some(function(r){return r===e.type})})}function reducerFactory$(r){var e=__read(r,3),t=e[0],n=e[1],o=e[2];return operators.scan(function(r,e){return o.length>0?_pipe(o)(n)(r,e):n(r,e)},t)}var fop={switchMap:operators.switchMap,mergeMap:operators.mergeMap,concatMap:operators.concatMap,exhaustMap:operators.exhaustMap};function getDefaults(r,e){void 0===r&&(r={}),void 0===e&&(e={});var t=r&&r.reducer$&&r.reducer$.pipe(catchErr)||rxjs.of(tsAction.reducer({})),n=new rxjs.Subject,o=(r&&r.initialState$&&r.initialState$.pipe(catchErr)||rxjs.of({})).pipe(operators.share()),a=r&&r.transducers$&&r.transducers$.pipe(catchErr)||rxjs.of([]),i=r&&r.destroy$&&r.destroy$.pipe(catchErr)||rxjs.NEVER,u=fop[e&&e.actionFlatOp||exports.FlattenOperator.concatMap],c=fop[e&&e.stateFlatOp||exports.FlattenOperator.switchMap],p=e&&e.bufferSize||1,s=e&&e.windowTime;return{reducer$:t,actions$:n,actionStream$:function(e){return(r&&r.actionStream$&&r.actionStream$.pipe(catchErr)||rxjs.EMPTY).pipe(operators.filter(isObject),operators.map(mapToObservable),u(flatCatch),operators.tap(n),e,operators.map(mapToObservable))},initialState$:o,transducers$:a,destroy$:i,flattenState$:function(r){return r.pipe(c(flatCatch),operators.map(mapToObservable),c(flatCatch))},shareReplayConfig:{refCount:!1,bufferSize:p,windowTime:s}}}
/**
 * Reactive state container based on RxJS (https://rxjs.dev/)
 *
 * @class AsyncStore<State, ActionsUnion>
 *
 * @type State - application state interface
 * @type ActionsUnion - type union of all the actions
 */var Store=
/**
     * Default configuration
     *
     * @param {Object} config
     *  {
     *     reducer$: of(reducer({})),
     *     actionStream$: EMPTY, // if not defined, no actions will be dispatched in the store
     *     initialState$: of({}),
     *     transducers$: of([]),
     *     destroy$: NEVER // if not defined, the state subscription will live forever
     *  }
     *
     * @param {Object} options
     *  {
     *     actionFop: FlattenOps.concatMap, // Flatten operator for actions's stream.
     *     stateFop: FlattenOps.switchMap // Flatten operator for state's stream.
     *     windowTime: undefined //Maximum time length of the replay buffer in milliseconds.
     *     bufferSize: 1 //Maximum element count of the replay buffer.
     *  }
     */
function(r,e){this.config=r,this.options=e;var t=getDefaults(this.config,this.options),n=t.reducer$,o=t.actions$,a=t.actionStream$,i=t.transducers$,u=t.initialState$,c=t.destroy$,p=t.flattenState$,s=t.shareReplayConfig;this.state$=rxjs.combineLatest(u,n,i).pipe(operators.map(reducerFactory$),operators.concatMap(a),operators.startWith(u),p,operators.takeUntil(c),operators.shareReplay(s)),this.state$.subscribe(),this.actions$=o.pipe(operators.shareReplay(s))},mapPS=function(r){return function(e){return function(t,n){return e(r(t),n)}}},mapNS=function(r){return function(e){return function(t,n){return r(e(t,n))}}},mapA=function(r){return function(e){return function(t,n){return e(t,r(n))}}},filterPS=function(r){return function(e){return function(t,n){return r(t)?e(t,n):t}}},filterNS=function(r){return function(e){return function(t,n){var o=e(t,n);return r(o)?o:t}}},filterA=function(r){return function(e){return function(t,n){return r(n)?e(t,n):t}}},reducePS=function(r){return function(e){return function(t,n){return e(r(t,n),n)}}},reduceNS=function(r){return function(e){return function(t,n){return r(e(t,n),n)}}},reduceA=function(r){return function(e){return function(t,n){return e(t,r(t,n))}}};
/**
 *
 * @param mapFn - a function to map a state with
 * @returns {TransducerFn} TransducerFn<State>
 *
 * PS - previous state
 * NS - next state
 */Object.keys(tsAction).forEach(function(r){"default"!==r&&Object.defineProperty(exports,r,{enumerable:!0,get:function(){return tsAction[r]}})}),exports.Store=Store,exports.catchErr=catchErr,exports.createSelector=createSelector,exports.filterA=filterA,exports.filterNS=filterNS,exports.filterPS=filterPS,exports.mapA=mapA,exports.mapNS=mapNS,exports.mapPS=mapPS,exports.mapToObservable=mapToObservable,exports.ofType=ofType,exports.reduceA=reduceA,exports.reduceNS=reduceNS,exports.reducePS=reducePS,exports.select=select;
